@model IEnumerable<AcmeCorp.Data.Models.Blogs>

@{
    Layout = "_Layout";
    ViewData["Title"] = "Admin blogs";
}

<h1>Admin view</h1>

<p>
    <a asp-route-action="Create" asp-route-controller="Blogs" asp-route="areaRoute">Create New</a>
</p>
<div class="container-fluid">

    <!--This is the datatable. The number of th/columns in the table must match the number of columns in the datatable function-->
    <div class="row">
        <div class="col-md text-center">
            <div class="border-left border-right border-top border-bottom" style="width:fit-content; min-width: 100%;">
                <div style="width:100%; margin:0 auto; padding:10px;">
                    <table id="BlogTable" class="table table-striped table-bordered dt-responsive" width="100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th class="dataTableHeader">Title</th>
                                <th class="dataTableHeader">Short description</th>
                                <th class="dataTableHeader">Image preview</th>
                                <th class="dataTableHeader">Release date</th>
                                <th class="dataTableHeader">Active</th>
                                <th class="dataTableHeader">Creation date</th>
                                <th class="dataTableHeader" style="text-wrap:no-wrap;">Actions</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>




<script>

    //Ran out of time so not fully working. Datatable that can become fully searchable and organisable for the blogs
    $(document).ready(function ($) {

                new DataTable('#BlogTable', {
                           "bInfo" : false,

            "ajax": {
                "url": 'Blogs/GetAllBlogs',
                "type": "GET",
                "datatype": "json",
                "dataSrc": function (json) {
                    return json;
                }
            },
            //Columns from left to right - what information appears in each row for each column. This is from the data retrieved in the ajax function
            "columns": [
                        { "data": 'Title' },
                        { "data": 'ShortDescription' },
                        { "data" :'ImageUrl' },
                        { "data" :'ReleaseDate' },
                        { "data":'Active' },
                        { "data" :'CreationDate' },
                        { "data": "BlogsId" },

            ],
            //defining the output of specific columns, gives links to edit, view and delete as well as formatting the date columns correctly
            "columnDefs":
                [
                    {

                        "targets": [6],
                        "render": function(data, type, row) {
                            return '<a href="/Admin/Blogs/Edit/' + row["BlogsId"] + '">Edit</a>  <a href="/Admin/Blogs/View/' + row["BlogsId"] + '">View</a> <a href="/Admin/Blogs/Delete/' + row["BlogsId"] + '">Delete</a>'
                        }
                    },
                {
                    "targets": [3],
                        "render": function(data, type, row) {
                            return new Date(row["ReleaseDate"]);
                        }

                },
                {
                    "targets": [5],
                        "render": function(data, type, row) {
                            return new Date(row["CreationDate"]);
                        }

                }
                        
                                           

                ],
            processing: true,
            serverSide: true,
            ordering: true,


                });
            });

</script>